# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,    r: 'release'}
          - {os: windows-latest,  r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Install MeCab
        if: ${{ matrix.config.os != 'windows-latest' }}
        run: |
          git clone --depth=1 https://github.com/taku910/mecab.git
          cd mecab/mecab
          ./configure --enable-utf8-only
          make
          sudo make install
          cd ../mecab-ipadic
          ./configure --with-charset=utf8
          make
          sudo make install
          cd ../../

      - uses: actions/setup-python@v4
        if: ${{ matrix.config.os == 'windows-latest' }}
        with:
          python-version: '3.10'

      - name: Setup ipadic for windows
        if: ${{ matrix.config.os == 'windows-latest' }}
        run: |
          python3 -m pip install ipadic
          python3 -c "import ipadic; print('dicdir=' + ipadic.DICDIR);" > $HOME\.mecabrc
          echo "MECABRC=$HOME\.mecabrc" >> $GITHUB_ENV

      - uses: r-lib/actions/setup-r-dependencies@v2
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        with:
          extra-packages: rcmdcheck, covr

      - uses: r-lib/actions/check-r-package@v2
        with:
          args: 'c("--no-vignettes", "--no-manual", "--ignore-vignettes", "--as-cran")'
          build_args: 'c("--no-build-vignettes", "--no-manual")'

      - name: Codecov
        if: ${{ matrix.config.os == 'ubuntu-latest' }}
        run: covr::codecov()
        shell: Rscript {0}
